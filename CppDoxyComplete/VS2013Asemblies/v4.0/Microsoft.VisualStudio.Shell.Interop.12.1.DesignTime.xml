<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.Interop.12.1.DesignTime</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDVPFLAGS2">
      <summary>Determines whether to add a new virtual project to the Project window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDVPFLAGS2.ADDVP_ReloadOnProjectFileChanged">
      <summary>Reload the project when the project file changes. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2">
      <summary>Used to discriminate in more detail between the priorities of items in a project. It is used by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenDocumentViaProject(System.String,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IServiceProvider@,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> to determine the best project to open a file. If you want your projects to express this detailed priority value, you should implement <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProject5.IsDocumentInProject2(System.String,System.Int32@,System.Int32@,System.UInt32@)" /> in addition to implementing <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProject.IsDocumentInProject(System.String,System.Int32@,Microsoft.VisualStudio.Shell.Interop.VSDOCUMENTPRIORITY[],System.UInt32@)" />. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_CanAddAsExternal">
      <summary>The document can be added as external.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_CanAddAsNonMember">
      <summary>The document can be added as a non-member.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_External">
      <summary>The document is external.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_IndirectMember">
      <summary>The document is an indirect member (an item being imported from another project file).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_Intrinsic">
      <summary>The document is intrinsic.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_NonMember">
      <summary>The document is a non-member.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_Standard">
      <summary>The document is standard.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2.DP2_Unsupported">
      <summary>The document is unsupported.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7">
      <summary>Specifies properties of the Visual Studio shell. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_CanBuildQuickCheck">
      <summary>VT_I4 [optional] Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer" /> that determines whether the given project can perform building via <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" />. This property can be used as a quick test to know if build-related features should be enabled.The absence of this property is equivalent to returning <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_QuickAnswerNA" />: the caller must call <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> to see if building is possible. <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Always" />: feature is always enabled; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Yes" />: feature is enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_No" />: feature is not enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Never" />: feature is not implemented. Returning QCA_Never/No does not stop all callers from accessing and using the project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_CanDebugLaunchQuickCheck">
      <summary>VT_I4 [optional] Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer" /> regarding if the given project can perform F5 debug launch via <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.The absence of this property is equivalent to returning <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_QuickAnswerNA" />: the caller must call <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" /> to see if building is possible. <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Always" />: feature is always enabled; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Yes" />: feature is enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_No" />: feature is not enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Never" />: feature is not implemented. Returning QCA_Never/No does not stop all callers from accessing and using the project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_CanDeployQuickCheck">
      <summary>T_I4 [optional] Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer" /> that determines whether the given project can perform deploying via <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" />.The absence of this property is equivalent to returning <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_QuickAnswerNA" />: the caller must call <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" /> to see if building is possible. <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Always" />: feature is always enabled; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Yes" />: feature is enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_No" />: feature is not enabled now; <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Never" />: feature is not implemented. Returning QCA_Never/No does not stop all callers from accessing and using the project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_DeploymentRelativePath">
      <summary>VT_BSTR [optional] Gets the deployment relative path of the given item. The deployment relative path is the file location relative to the package directory, when the given file is deployed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_ExcludeFromMoveFileToProjectUI">
      <summary>VT_BOOL [optional] Returns true if the given project wants to be excluded from participating with cmdidMoveFileToProjectXXX commands.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_FIRST7">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_IsSharedFolder">
      <summary>VT_BOOL [optional] Returns true if the given item represents the folder node as an ancestor of shared items.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_IsSharedItem">
      <summary>VT_BOOL [optional] If this returns true, this item is imported from another project file that is shared across projects. Otherwise it returns false. A shared item is special. It is added to this importing project hierarchy as a hidden linked file, so it is enumerable via <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID.VSHPROPID_FirstChild" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID.VSHPROPID_NextSibling" />, but it cannot be mutated by this importing project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_IsSharedItemsImportFile">
      <summary>VT_BOOL [optional] Returns true if the given item represents the MSBuild file that imports the shared items.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_MSBuildImportsStorage">
      <summary>VT_UNKNOWN [optional] Returns the implementation of IVsMSBuildImportsStorage for a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_OneAppCapabilities">
      <summary>VT_BSTR [optional] Returns the "one app" capabilities. When they include "Migration" or "Add Platform", they are used to pick the right template using ApplyTo metadata from templates.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_ProjectTreeCapabilities">
      <summary>VT_BSTR [optional] Provides a space-delimited list of project tree node capabilities. Note: Unlike VSHPROPID_ProjectCapabilities, which is available only on the Project Root node, this property is allowed on every node.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedAssetsProject">
      <summary>VT_UNKNOWN [optional] Returns the implementation of IVsSharedAssetsProject for the given shared project hierarchy. The item ID should be VSITEMID_ROOT.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedItemContextHierarchy">
      <summary>VT_UNKNOWN [optional] Gets or sets the contextual IVsHierarchy for the items that are shared by other projects. It is used for sharing scenarios, for example, when a document is shared across projects. When someone edits that document, one project must be selected as the context to offer to IntelliSense. The currently-selected project hierarchy could be retrieved or changed via this property on the master owning project hierarchy. Note this property is per-project in the current implementation, GetProperty/SetProperty must be invoked on the root node.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedItemsImportFullPaths">
      <summary>VT_BSTR [optional] Provides a vertical bar ('|') delimited list of the full paths of the "Shared.items" project files that have been imported by the project. Note: This property does not return "Shared.items" files for Shared Folder nodes that manage their shared MSBuild file as a nested hierarchy implementation. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedProjectHierarchy">
      <summary>VT_UNKNOWN [optional] Returns the actual owning shared project hierarchy of the given shared item. Note: The item ID should be the ID of a shared item. If the given item is already an item in a shared assets project, then it returns this shared assets project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_ShortSubcaption">
      <summary>VT_BSTR [optional] The short version of VSHPROPID_Subcaption.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer">
      <summary>Specifies when a feature is enabled. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Always">
      <summary>The feature is always enabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Never">
      <summary>The feature is not implemented.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_No">
      <summary>The feature is not enabled now.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_QuickAnswerNA">
      <summary>The caller must call <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" /> to see if deployment is possible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSQuickCheckAnswer.QCA_Yes">
      <summary>The feature is enabled now.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2">
      <summary>Specifies the app manifest designer tab to be opened by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService.OpenAppxManifestDesigner(Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder,Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab)" /> method. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_Application">
      <summary>Opens the Application UI tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_Capabilities">
      <summary>Opens the Capabilities tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_ContentURIs">
      <summary>Opens the Content URIs tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_Current">
      <summary>Opens the Current tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_Declarations">
      <summary>Opens the Declarations tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_HardwareRequirements">
      <summary>Opens the Hardware Requirements tab in the app manifest designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2.AMDT_Packaging">
      <summary>Opens the Packaging tab in the app manifest designer.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService3">
      <summary>Provides programmatic access to a project's .appxmanifext file. You can use it to open a DocData object provided by the Manifest Designer, ensure that it is registered in the running document table (RDT), and return a document handle object that implements two interfaces: IVsDocumentLockHolder and IVsInvisibleEditor. This forces any existing document window to close, and causes the returned document handle to hold a RDT_EditLock. When you need to keep the document handle for longer periods of time, cast it to IVsInvisibleEditor and use GetDocData to get a pointer to a fresh object model. When finished with the document handle, always call IVsDocumentLockHolder.CloseDocumentHolder(), usually passing (uint)__FRAMECLOSE.FRAMECLOSE_SaveIfDirty as the save option. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService3.OpenAppxManifestDesigner(Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder,Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab)">
      <summary>Opens the .appxmanifest designer displaying the specified tab with the given document handle.</summary>
      <returns>The HRESULT.</returns>
      <param name="documentHandle">The document handle</param>
      <param name="tab">The tab to display.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService3.OpenAppxManifestDesigner(Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder,Microsoft.VisualStudio.Shell.Interop.AppxManifestDesignerTab2)">
      <summary>Opens the .appxmanifest designer.</summary>
      <returns>The HRESULT.</returns>
      <param name="documentHandle">The document handle.</param>
      <param name="tab">The tab to display.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService3.OpenAppxManifestDocument(System.Object,Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder@,Microsoft.VisualStudio.Shell.Interop.IAppxManifestDocument@)">
      <summary>Opens the .appxmanifest file.</summary>
      <returns>The HRESULT.</returns>
      <param name="project">The current project.</param>
      <param name="documentHandle">The document handle.</param>
      <param name="appxManifestDocument">The .appxmanifest document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IAppxManifestDesignerService3.OpenAppxManifestDocument(System.Object,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder@,Microsoft.VisualStudio.Shell.Interop.IAppxManifestDocument2@)">
      <summary>Opens the .appxmanifest file.</summary>
      <returns>The HRESULT.</returns>
      <param name="Project">The project.</param>
      <param name="forceSaveAndClose">Determines whether to force save  the document.</param>
      <param name="documentHandle">The document handle.</param>
      <param name="appxManifestDocument">The .appxmanifest file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2">
      <summary>Represents the bootstrapper. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2.AdviseAppContainerBootstrapperEvents(Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapperEvents)">
      <summary>Subscribes to bootstrapper events.</summary>
      <returns>The event cookie.</returns>
      <param name="sink">The event sink.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2.BootstrapAsync(System.String,System.String,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapperLogger)">
      <summary>Asynchronously bootstraps the given target</summary>
      <returns>An IVsTask whose result is an instance of IVsAppContainerBootstrapperResult, or an error code. This is E_ABORT if called on the main thread and an advised callback has aborted the operation; otherwise S_OK.</returns>
      <param name="projectUniqueName">The name of the project.</param>
      <param name="target">The target.</param>
      <param name="cItems">The items.</param>
      <param name="packagesToDownload">The packages to download.</param>
      <param name="logger">An optional callback to receive output messages.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2.BootstrapForDebuggingAsync(System.String,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapperLogger)">
      <summary>Asynchronously bootstraps given target and established debugger host for debugging the app represented by the recipe.</summary>
      <returns>An IVsTask whose result is an instance of IVsAppContainerBootstrapperResult, or an error code. This is E_ABORT if called on the main thread and an advised callback has aborted the operation; otherwise S_OK.</returns>
      <param name="projectUniqueName">The name of the project.</param>
      <param name="target">The target.</param>
      <param name="recipePath">The path of the recipe.</param>
      <param name="logger">An optional callback to receive output messages.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2.BootstrapForDiagnosticsAsync(System.String,System.String,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapperLogger)">
      <summary>Asynchronously bootstraps given target and established diagnostics host for debugging the app represented by the recipe.</summary>
      <returns>An IVsTask whose result is an instance of IVsAppContainerBootstrapperResult, or an error code. This is E_ABORT if called on the main thread and an advised callback has aborted the operation; otherwise S_OK.</returns>
      <param name="projectUniqueName">The name of the project.</param>
      <param name="target">The target.</param>
      <param name="cItems">The items.</param>
      <param name="packagesToDownload">The packages to download.</param>
      <param name="logger">An optional callback to receive output messages.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerBootstrapper2.UnadviseAppContainerBootstrapperEvents(System.UInt32)">
      <summary>Unsubscribes from bootstrapper events.</summary>
      <param name="cookie">The event cookie.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2">
      <summary>Deploys the app container application. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2.AdviseAppContainerDeployEvents(Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeployEvents)">
      <summary>Enables a client to be notified of app container deployment events.</summary>
      <returns>A cookie associated with the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeployEvents" /> interface.</returns>
      <param name="sink">[in] The event sink to call when an app container deployment event occurs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2.StartDeployAsync(System.UInt32,System.String,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeployCallback)">
      <summary>Initiates deployment of the app container application on the local machine. It creates a "layout folder" containing the app files as defined in the package recipe file and registers the application with Windows package manager. After successfully executing of this process, the application is ready to be launched on the local box or on the simulator.</summary>
      <returns>The app container application deployed on the local machine.</returns>
      <param name="deployFlags">[in] The deployment options for this instance of the app container application.</param>
      <param name="packageContentsRecipe">[in] The package recipe file that defines the package contents.</param>
      <param name="layoutLocation">[in] The location where the app container application is deployed.</param>
      <param name="projectUniqueName">[in] The unique name of the project.</param>
      <param name="deployCallback">[in] The callback routine that is to be notified when events occur.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2.StartRemoteDeployAsync(System.UInt32,System.Object,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeployCallback)">
      <summary>Initiate deployment of the app container application on a remote machine.</summary>
      <returns>The app container application deployed on the remote machine.</returns>
      <param name="deployFlags">[in] The deployment options for this instance of the app container application.</param>
      <param name="deployConnection">[in] The protocol used to interact with the remote machine.</param>
      <param name="packageContentsRecipe">[in] The package recipe file that defines the package contents.</param>
      <param name="projectUniqueName">[in] The unique name of the project.</param>
      <param name="deployCallback">[in] The callback routine that is to be notified when events occur.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2.StartRemoteDeployAsync(System.UInt32,System.Object,System.String,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeployCallback)">
      <summary>Initiate deployment of the app container application on a remote machine.</summary>
      <returns>The app container application deployed on the remote machine.</returns>
      <param name="deployFlags">[in] The deployment options for this instance of the app container application.</param>
      <param name="deployConnection">[in] The protocol used to interact with the remote machine.</param>
      <param name="target">The target.</param>
      <param name="packageContentsRecipe">[in] The package recipe file that defines the package contents.</param>
      <param name="projectUniqueName">[in] The unique name of the project.</param>
      <param name="deployCallback">[in] The callback routine that is to be notified when events occur.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAppContainerProjectDeploy2.UnadviseAppContainerDeployEvents(System.UInt32)">
      <summary>Disables clients from receiving notifications of app container deployment events.</summary>
      <param name="cookie">The event cookie.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage3">
      <summary>Implemented by the project system to give flavors access to the MSBuild property system. This interface provides more flexibility around setting properties than <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage" />. It allows for adding a new conditional property group and does not escape the values. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage3.AdviseEvents(Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorageEvents,System.UInt32@)">
      <summary>Subscribes to build property storage events.</summary>
      <returns>The HRESULT.</returns>
      <param name="pSink">The event sink.</param>
      <param name="pdwCookie">[out] The event cookie.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage3.UnadviseEvents(System.UInt32)">
      <summary>Unsubscribes from build property storage events.</summary>
      <returns>The HRESULT.</returns>
      <param name="dwCookie">The event cookie.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorageEvents">
      <summary>Represents build property storage events. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorageEvents.OnAfterItemsChanged(System.Int32,System.String[])">
      <summary>Occurs when certain items have changed.</summary>
      <returns>The HRESULT.</returns>
      <param name="cItems">The items.</param>
      <param name="rgpszItemFullPaths">An array containing the full paths of the items.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumHierarchies">
      <summary>Provides an enumeration for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> objects. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Interop.IVsEnumHierarchies.Count">
      <summary>Gets the number of IVsHierarchy objects.</summary>
      <returns>The number of IVsHierarchy objects.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumHierarchies.GetEnumerator">
      <summary>Gets the enumerator.</summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Interop.IVsEnumHierarchies.Item(System.Int32)">
      <summary>Gets the specified IVsHierarchy object.</summary>
      <returns>The IVsHierarchy object.</returns>
      <param name="index">The index of the IVsHierarachy object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProject5">
      <summary>Provides the ability to determine whether a document is in a project. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject5.IsDocumentInProject2(System.String,System.Int32@,System.Int32@,System.UInt32@)">
      <summary>Determines whether the specified document is in a project.</summary>
      <returns>The HRESULT.</returns>
      <param name="pszMkDocument">The path of the document.</param>
      <param name="pfFound">[out] true if the document is found in the project, otherwise false.</param>
      <param name="pdwPriority2">[out] The priority. For a list of known priority values, see<see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDOCUMENTPRIORITY2" />.</param>
      <param name="pitemid">[out] The item ID of the document.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFileReloadManagerEvents">
      <summary>Implemented by clients that coordinate files required for loading projects.You subscribe to these events via IVsSolution::AdviseSolutionEvents. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFileReloadManagerEvents.OnQueryAdditionalFilesToBeClosedBeforeProjectsReloaded(System.Int32,System.Guid[])">
      <summary>Occurs before unloaded projects are reloaded by the user. The implementer of this event sink is expected to return the list of additional files that need to be closed before the projects can be reloaded. The unloaded projects' project files are already known to be closed and need not be included in the list that is returned by this method. The implementer does not need to look the files up in the Running Document Table to see if they are actually open. Visual Studio makes sure that the files are actually open in an editor (i.e. not registered in the RDT with the RDT_ProjSlnDocument flag set). These additional files are typically files imported or included by the unloaded project files that must be available in order for the reloading projects to open.</summary>
      <returns>An array of the names of files to be closed.</returns>
      <param name="cProjectsToBeReloaded">The number of projects to be reloaded.</param>
      <param name="rgProjectsToBeReloaded">An array of ProjectID GUIDs of unloaded projects to be reloaded.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject">
      <summary>Represents a project with shared assets. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject.AdviseEvents(Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectEvents)">
      <summary>Subscribes to the shared project's events.</summary>
      <returns>The event cookie.</returns>
      <param name="pEvents">The event sink.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject.EnumImportingProjects">
      <summary>Enumerates the projects that import the project file that this Shared Assets Project imports and owns.</summary>
      <returns>The HRESULT.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject.SharedItemsImportFullPath">
      <summary>Gets the full path of the shared items.</summary>
      <returns>The full path of the shared items.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject.UnadviseEvents(System.UInt32)">
      <summary>Stops subscribing to shared asset project events.</summary>
      <param name="cookie">The event cookie.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectEvents">
      <summary>Represents the events associated with projects that have shared assets.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectEvents.OnImportingProjectLoaded(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Notifies listening clients that a project is being loaded, and it imports the project file that this Shared Assets Project imports and owns.</summary>
      <returns>The HRESULT.</returns>
      <param name="pLoadedProject">The project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectEvents.OnImportingProjectRemovedOrUnloaded(System.Guid)">
      <summary>Notifies listening clients that a project is being removed or unloaded, and it imports the project file that this Shared Assets Project imports and owns.</summary>
      <returns>The HRESULT.</returns>
      <param name="removedOrUnloadedProjectGuid">The GUID of the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution6">
      <summary>Provides top-level manipulation or maintenance of the solution. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution6.AddExistingProject(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)">
      <summary>Adds an existing project to the solution.</summary>
      <returns>The HRESULT.</returns>
      <param name="szFullPath">The full path of the project.</param>
      <param name="pParent">[optional] The parent IVsHierarchy element under which to create the new project. This can be the solution folder or any project that implements IVsParentProject3.</param>
      <param name="ppNewProj">[out] The new IVsHierarchy element.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution6.AddNewProjectFromTemplate(System.String,System.Array,System.String,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)">
      <summary>Adds a new project to the solution, using a project template.</summary>
      <returns>The newly created project. If the template creates more than one project, this one is the first one created.</returns>
      <param name="szTemplatePath">The path of the template.</param>
      <param name="rgCustomParams">[optional] Custom keywords to pass to the template engine. Strings must have the form "keyword=value".</param>
      <param name="szTargetFramework">[optional] The target framework (if applicable) for template selection.</param>
      <param name="szDestinationFolder">The location on disk where the project will be created.</param>
      <param name="szProjectName">The name of the project.</param>
      <param name="pParent">[optional] The parent project under which to create the new project. This can be solution folder or any project that implements IVsParentProject3.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution6.BrowseForExistingProject(System.String,System.String,System.Guid,System.String@)">
      <summary>Uses the open project dialog to select a project.</summary>
      <returns>The HRESULT.</returns>
      <param name="szDialogTitle">[optional] The title of the dialog.</param>
      <param name="szStartupLocation">[optional] The initial location on disk from which to open the AddExistingProject dialog.</param>
      <param name="preferedProjectType">[optional] The preferred project type. If this is null, "Any projects" is selected by default.</param>
      <param name="pbstrSelected">[out] If project creation is successful, the name of selected project file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution6.SetProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Sets the parent of the project. The solution considers <paramref name="pProject" /> to be a child (in a nested hierarchy) of <paramref name="pParent" />, and it does not enumerate it in the solution hierarchy. The <paramref name="pParent" /> hierarchy is responsible for adding a visual representation of this project in Solution Explorer. <paramref name="pParent" /> is expected to implement IVsParentProject3, otherwise this method does nothing.</summary>
      <returns>The HRESULT.</returns>
      <param name="pProject">The IVsHierarchy element of the project.</param>
      <param name="pParent">The IVsHierarchy element of the project's parent.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents6">
      <summary>Provides events associated with solutions. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents6.OnAfterProjectRegisteredInRunningDocumentTable(System.Guid,System.String,System.UInt32)">
      <summary>The notification that is fired during project creation, after the solution has registered the project file in the RunningDocumentTable. This event can be used to find out the <paramref name="docCookie" /> value that was assigned to the project in the RDT. Note: If the solution's call to RegisterAndLockDocument failed, then <paramref name="docCookie" /> will be VSCOOKIE_NIL. Clients of this event are expected to explicitly recognize this case and react accordingly. For example, a client may want to re-register their project placeholder document in the RDT.</summary>
      <returns>The HRESULT.</returns>
      <param name="projectID">The project ID.</param>
      <param name="projectFullPath">The full path of the project file.</param>
      <param name="docCookie">The doc cookie in the RunningDocumentTable.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents6.OnBeforeProjectRegisteredInRunningDocumentTable(System.Guid,System.String)">
      <summary>A notification fired during project creation, before the solution attempts to register the project file in the RunningDocumentTable. This event can be used to find out when to unregister a project placeholder document from the RDT so as to not block the opening of the real project.</summary>
      <returns>The HRESULT.</returns>
      <param name="projectID">The project ID.</param>
      <param name="projectFullPath">The full path of the project file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SharedMSBuildFilesManagerHierarchy">
      <summary>A project hierarchy with shared MSBuild files. In the Save Changes dialog, this project file appears with the name "[Shared MSBuild Project Files]". This node appears in the Save Changes dialog when there are shared MSBuild files that need to be saved and the files do not have affinity to a particular shared assets project. A new singleton instance of this hierarchy is created (if necessary) for each solution and closed when the solution closes. This singleton hierarchy always has the same value as its <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID.VSHPROPID_ProjectIDGuid" /> property. The SharedMSBuildFilesManagerHierarchy project supports the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedProjectHierarchy" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID7.VSHPROPID_SharedAssetsProject" /> properties for each of its shared MSBuild file project items. </summary>
    </member>
  </members>
</doc>